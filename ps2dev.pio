;
; Copyright (c) 2022 No0ne (https://github.com/No0ne)
;
; SPDX-License-Identifier: MIT License
;

.program ps2dev

.wrap_target
  set pins, 1
  out pins, 1
  set pins, 0 [1]
.wrap

;gpio_set_dir(clkout, GPIO_OUT);
;gpio_set_dir(datout, GPIO_OUT);
;ps2_set_bit(0, clkout, datout);
;
;...
;
;ps2_set_bit(parity, clkout, datout);
;ps2_set_bit(1, clkout, datout);
;
;gpio_set_dir(clkout, GPIO_IN);
;gpio_set_dir(datout, GPIO_IN);

;void irq_callback(uint gpio, uint32_t events) {
;  if(irq_enabled) {
;    if(gpio == KBCLK && !gpio_get(KBDAT)) {
;      printf("IRQ KB  ");
;      receive_kbd = true;
;    }
;    
;    if(gpio == MSCLK && !gpio_get(MSDAT)) {
;      printf("IRQ MS  ");
;      receive_ms = true;
;    }
;  }
;}

;void ps2_receive(bool channel) {
;  uint8_t clkin = channel ? KBCLK : MSCLK;
;  uint8_t datin = channel ? KBDAT : MSDAT;
;
;  board_led_write(1);
;
;  uint8_t bit = 1;
;  uint8_t data = 0;
;  uint8_t parity = 1;
;
;  gpio_set_dir(clkin, GPIO_OUT);
;  ps2_cycle_clock(clkin);
;
;  while(bit) {
;    if(gpio_get(datin)) {
;      data = data | bit;
;      parity = parity ^ 1;
;    } else {
;      parity = parity ^ 0;
;    }
;
;    bit = bit << 1;
;    ps2_cycle_clock(clkin);
;  }
;
;  parity = gpio_get(datin) == parity;
;  ps2_cycle_clock(clkin);
;
;  gpio_set_dir(datin, GPIO_OUT);
;  ps2_set_bit(0, clkin, datin);
;  gpio_set_dir(clkin, GPIO_IN);
;  gpio_set_dir(datin, GPIO_IN);
;
;  board_led_write(0);
;
;  if(!parity) {
;    if(channel) {
;      kbd_send(0xfe);
;    } else {
;      ms_send(0xfe);
;    }
;    return;
;  }
;
;  if(channel) {
;    printf("got KB %02x  ", (unsigned char)data);
;    process_kbd(data);
;  } else {
;    printf("got MS %02x  ", (unsigned char)data);
;    process_ms(data);
;  }
;}
